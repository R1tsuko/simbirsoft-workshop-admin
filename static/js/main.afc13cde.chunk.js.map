{"version":3,"sources":["components/LoginPage/LoginPage.module.scss","components/ui/Loader/Loader.module.scss","App.module.scss","utils/hooks.ts","utils/constants/authConstants.ts","utils/helpers/authHelpers.ts","api/authApi.ts","store/slices/authSlice.ts","components/ui/Loader/Loader.tsx","components/LoginPage/LoginForm/LoginForm.tsx","assets/icons/Logo.svg","components/LoginPage/LoginPage.tsx","App.tsx","store/store.ts","index.tsx","components/LoginPage/LoginForm/LoginForm.module.scss"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","TOKENS_DETAILS_NAME","generateBasicToken","len","btoa","result","characters","charactersLength","length","i","charAt","Math","floor","random","getRandomHash","getTokensFromLocalStorage","tokenDetailsString","localStorage","getItem","JSON","parse","expireDate","authToken","refreshToken","Date","getTime","AuthApi","accessTokenInterceptor","instance","this","axios","create","baseURL","headers","a","username","password","post","Authorization","response","data","refresh_token","get","accessToken","interceptors","request","use","config","eject","authApi","login","createAsyncThunk","loginData","dispatch","onLoginSuccess","status","loginFail","tryAutoLogin","_","tokensInfo","refresh","logout","ejectAccessToken","removeItem","authSlice","createSlice","name","initialState","isLoggedIn","isLoginError","isSubmitting","reducers","setIsLoggedIn","state","action","payload","loginSuccess","extraReducers","builder","addCase","pending","fulfilled","actions","selectIsLoggedIn","auth","selectIsLoginError","selectIsSubmitting","injectAccessToken","access_token","expiresIn","setItem","stringify","saveTokensInLocalStorage","expires_in","Loader","className","styles","loaderWrapper","loader","LoginForm","isError","useForm","register","onSubmit","handleSubmit","formWrapper","form","title","formErrorMessage","inputsContainer","label","htmlFor","input","id","type","controls","submit","LoginPage","pageWrapper","contentContainer","logo","src","logoIcon","alt","App","useEffect","appWrapper","path","onClick","to","store","configureStore","reducer","authReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afc13cde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"LoginPage_pageWrapper__1pEGk\",\"contentContainer\":\"LoginPage_contentContainer__fUA4f\",\"logo\":\"LoginPage_logo__3YeLq\",\"title\":\"LoginPage_title__27XRo\",\"formWrapper\":\"LoginPage_formWrapper__2hO3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__1CJbf\",\"loader\":\"Loader_loader__15EID\",\"load8\":\"Loader_load8__bq-Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1B5rP\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const APP_SECRET = '4cbcea96de';\r\nexport const BASE_URL = 'https://api-factory.simbirsoft1.com/api/';\r\nexport const APP_ID = '5e25c641099b810b946c5d5b';\r\nexport const TOKENS_DETAILS_NAME = 'tokensDetails';\r\n","import { APP_SECRET, TOKENS_DETAILS_NAME } from '../constants/authConstants';\r\nimport { ITokensInfo } from '../types';\r\n\r\nexport const getRandomHash = (len: number): string => {\r\n  let result = '';\r\n  const characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < len; i += 1) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const generateBasicToken = (len: number): string =>\r\n  btoa(`${getRandomHash(len)}:${APP_SECRET}`);\r\n\r\nexport const saveTokensInLocalStorage = (\r\n  expiresIn: number,\r\n  refreshToken: string,\r\n  authToken: string\r\n): void => {\r\n  const tokensInfo: ITokensInfo = {\r\n    expireDate: new Date().getTime() + expiresIn * 1000,\r\n    refreshToken,\r\n    authToken,\r\n  };\r\n  localStorage.setItem(TOKENS_DETAILS_NAME, JSON.stringify(tokensInfo));\r\n};\r\n\r\nexport const getTokensFromLocalStorage = (): {\r\n  authToken: string;\r\n  refreshToken: string;\r\n} | null => {\r\n  const tokenDetailsString = localStorage.getItem(TOKENS_DETAILS_NAME);\r\n\r\n  if (!tokenDetailsString) {\r\n    return null;\r\n  }\r\n\r\n  const { expireDate, authToken, refreshToken }: ITokensInfo =\r\n    JSON.parse(tokenDetailsString);\r\n  if (expireDate < new Date().getTime()) {\r\n    return null;\r\n  }\r\n\r\n  return { authToken, refreshToken };\r\n};\r\n\r\nexport const clearTokensInLocalStorage = (): void => {\r\n  localStorage.removeItem(TOKENS_DETAILS_NAME);\r\n};\r\n","import axios, { AxiosInstance } from 'axios';\r\nimport { APP_ID, BASE_URL } from '../utils/constants/authConstants';\r\nimport { ILoginData, ILoginResponseData } from '../utils/types';\r\n\r\nclass AuthApi {\r\n  private accessTokenInterceptor: null | number;\r\n\r\n  private instance: AxiosInstance;\r\n\r\n  constructor() {\r\n    this.accessTokenInterceptor = null;\r\n    this.instance = axios.create({\r\n      baseURL: BASE_URL,\r\n      headers: { 'X-Api-Factory-Application-Id': APP_ID },\r\n    });\r\n  }\r\n\r\n  async login({ username, password }: ILoginData, authToken: string) {\r\n    const response = await this.instance.post<ILoginResponseData>(\r\n      `auth/login`,\r\n      { username, password },\r\n      {\r\n        headers: {\r\n          Authorization: `Basic ${authToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async refresh(refreshToken: string, authToken: string) {\r\n    const response = await this.instance.post<ILoginResponseData>(\r\n      `auth/refresh`,\r\n      { refresh_token: refreshToken },\r\n      {\r\n        headers: {\r\n          Authorization: `Basic ${authToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  async check() {\r\n    const response = await this.instance.get('auth/check');\r\n    return response.data;\r\n  }\r\n\r\n  async logout() {\r\n    const response = await this.instance.post('auth/logout');\r\n    return response.data;\r\n  }\r\n\r\n  injectAccessToken(accessToken: string) {\r\n    this.accessTokenInterceptor = this.instance.interceptors.request.use(\r\n      (config) => ({\r\n        ...config,\r\n        headers: {\r\n          ...config.headers,\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  ejectAccessToken() {\r\n    if (this.accessTokenInterceptor) {\r\n      axios.interceptors.request.eject(this.accessTokenInterceptor);\r\n    }\r\n  }\r\n}\r\n\r\nconst authApi = new AuthApi();\r\n\r\nexport default authApi;\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  generateBasicToken,\n  getTokensFromLocalStorage,\n  saveTokensInLocalStorage,\n  clearTokensInLocalStorage,\n} from '../../utils/helpers/authHelpers';\nimport authApi from '../../api/authApi';\nimport { ILoginData, ILoginResponseData } from '../../utils/types';\nimport { RootState, AppDispatch } from '../store';\n\nexport interface IAuthState {\n  isLoggedIn: boolean;\n  isLoginError: boolean;\n  isSubmitting: boolean;\n}\n\nconst initialState: IAuthState = {\n  isLoggedIn: false,\n  isLoginError: false,\n  isSubmitting: false,\n};\n\nexport const login = createAsyncThunk<\n  void,\n  ILoginData,\n  { dispatch: AppDispatch }\n>('auth/login', async (loginData, { dispatch }) => {\n  try {\n    const authToken = generateBasicToken(15);\n    const response = await authApi.login(loginData, authToken);\n    onLoginSuccess(response, dispatch, authToken);\n  } catch (e) {\n    if (e.response.status === 401) {\n      dispatch(loginFail());\n    }\n  }\n});\n\nexport const tryAutoLogin = createAsyncThunk<\n  void,\n  void,\n  { dispatch: AppDispatch }\n>('auth/tryAutoLogin', async (_, { dispatch }) => {\n  const tokensInfo = getTokensFromLocalStorage();\n\n  if (tokensInfo) {\n    const response = await authApi.refresh(\n      tokensInfo.refreshToken,\n      tokensInfo.authToken\n    );\n    onLoginSuccess(response, dispatch, tokensInfo.authToken);\n  }\n});\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authApi.logout();\n  authApi.ejectAccessToken();\n  clearTokensInLocalStorage();\n});\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n\n  reducers: {\n    setIsLoggedIn: (state, action: PayloadAction<boolean>) => {\n      state.isLoggedIn = action.payload;\n    },\n    loginSuccess: (state) => {\n      state.isLoggedIn = true;\n      state.isLoginError = false;\n    },\n    loginFail: (state) => {\n      state.isLoginError = true;\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.isSubmitting = true;\n      })\n      .addCase(login.fulfilled, (state) => {\n        state.isSubmitting = false;\n      })\n      .addCase(tryAutoLogin.pending, (state) => {\n        state.isSubmitting = true;\n      })\n      .addCase(tryAutoLogin.fulfilled, (state) => {\n        state.isSubmitting = false;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.isLoggedIn = false;\n      });\n  },\n});\n\nconst { loginSuccess, loginFail } = authSlice.actions;\n\nexport const selectIsLoggedIn = (state: RootState) => state.auth.isLoggedIn;\nexport const selectIsLoginError = (state: RootState) => state.auth.isLoginError;\nexport const selectIsSubmitting = (state: RootState) => state.auth.isSubmitting;\n\nconst onLoginSuccess = (\n  response: ILoginResponseData,\n  dispatch: AppDispatch,\n  authToken: string\n) => {\n  authApi.injectAccessToken(response.access_token);\n  saveTokensInLocalStorage(\n    response.expires_in,\n    response.refresh_token,\n    authToken\n  );\n  dispatch(loginSuccess());\n};\n\nexport default authSlice.reducer;\n","import React from 'react';\r\nimport styles from './Loader.module.scss';\r\n\r\nconst Loader = () => (\r\n  <div className={styles.loaderWrapper}>\r\n    <div className={styles.loader} />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAppDispatch, useAppSelector } from '../../../utils/hooks';\r\nimport {\r\n  login,\r\n  selectIsLoginError,\r\n  selectIsSubmitting,\r\n} from '../../../store/slices/authSlice';\r\nimport Loader from '../../ui/Loader/Loader';\r\nimport { ILoginData } from '../../../utils/types';\r\nimport styles from './LoginForm.module.scss';\r\n\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useAppDispatch();\r\n  const isError = useAppSelector(selectIsLoginError);\r\n  const isSubmitting = useAppSelector(selectIsSubmitting);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n  } = useForm<ILoginData>();\r\n\r\n  const onSubmit = handleSubmit((data) => dispatch(login(data)));\r\n\r\n  return (\r\n    <div className={styles.formWrapper}>\r\n      {isSubmitting ? (\r\n        <Loader />\r\n      ) : (\r\n        <form className={styles.form} onSubmit={onSubmit}>\r\n          <div className={styles.title}>Вход</div>\r\n\r\n          {isError ? (\r\n            <div className={styles.formErrorMessage}>\r\n              Неверный логин и/или пароль\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className={styles.inputsContainer}>\r\n            <label className={styles.label} htmlFor='username'>\r\n              Почта\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              id='username'\r\n              type='text'\r\n              {...register('username')}\r\n            />\r\n\r\n            <label className={styles.label} htmlFor='password'>\r\n              Пароль\r\n            </label>\r\n            <input\r\n              className={styles.input}\r\n              id='password'\r\n              type='password'\r\n              {...register('password')}\r\n            />\r\n          </div>\r\n          <div className={styles.controls}>\r\n            <div className={styles.register}>Запросить доступ</div>\r\n            <button className={styles.submit} type='submit'>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export default __webpack_public_path__ + \"static/media/Logo.bc4f3ee8.svg\";","import React from 'react';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport styles from './LoginPage.module.scss';\r\nimport logoIcon from '../../assets/icons/Logo.svg';\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className={styles.pageWrapper}>\r\n      <div className={styles.contentContainer}>\r\n        <div className={styles.logo}>\r\n          <img src={logoIcon} alt='logo' />\r\n          <div className={styles.title}>Need for car</div>\r\n        </div>\r\n        \r\n        <div className={styles.formWrapper}>\r\n          <LoginForm />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","/* eslint-disable react/button-has-type */\nimport React, { useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport styles from './App.module.scss';\nimport { useAppDispatch, useAppSelector } from './utils/hooks';\nimport { logout, selectIsLoggedIn, tryAutoLogin } from './store/slices/authSlice';\n\nconst App = () => {\n  const isLoggedIn = useAppSelector(selectIsLoggedIn);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(tryAutoLogin());\n  }, []);\n\n  return (\n    <div className={styles.appWrapper}>\n      <Switch>\n        <Route path='/admin'>\n          {isLoggedIn ? (\n            <div>\n              u are authorized!!!\n              <button\n                onClick={() => {\n                  dispatch(logout())\n                }}\n              >\n                выйти\n              </button>\n            </div>\n          ) : (\n            <Redirect to='/login' />\n          )}\n        </Route>\n\n        <Route path='/login'>\n          {isLoggedIn ? <Redirect to='/admin' /> : <LoginPage />}\n        </Route>\n\n        <Route path='/'>\n          <Redirect to='/admin' />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport authReducer from './slices/authSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"LoginForm_formWrapper__1af8a\",\"title\":\"LoginForm_title__yaymJ\",\"formErrorMessage\":\"LoginForm_formErrorMessage__31Rz-\",\"inputsContainer\":\"LoginForm_inputsContainer__ep_np\",\"label\":\"LoginForm_label__1zwRH\",\"input\":\"LoginForm_input__HsgdV\",\"controls\":\"LoginForm_controls__d2JVQ\",\"register\":\"LoginForm_register__VSf50\",\"submit\":\"LoginForm_submit__3cDG5\"};"],"sourceRoot":""}